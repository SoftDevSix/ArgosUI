name: CI_PR_Workflow

on:
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  lint:
    name: Lint and Prettier check
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run Linter
        run: npm run lint

      - name: Run Prettier Check
        run: npm run prettier:check

  semantic_pull_request:
    name: Check Conventional PR Title
    runs-on: ubuntu-latest

    steps:
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            chore
            docs
            build
            ci
            style
            fix
            refactor
            perf
            revert
          requireScope: false
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" in the PR title "{title}" must not start with an uppercase character.
          headerPattern: '^(\w*)(?:\(([\w$.\-*/ ]*)\))?: (.*)$'
          headerPatternCorrespondence: type, scope, subject
          validateSingleCommit: true

  check_commit_messages:
    name: Check Conventional Commits Message
    runs-on: ubuntu-latest

    steps:
      - uses: gsactions/commit-message-checker@v2
        with:
          pattern: '^(Merge|(?:feat|fix|chore|docs|build|ci|style|refactor|perf|revert)(?:\(\w+\))?:\s[a-z]{1,2}.+)'
          error: 'Commit message must follow the format: <type>(?): <description>'
          excludeDescription: 'true'
          excludeTitle: 'true'
          checkAllCommitMessages: 'true'
          accessToken: ${{ secrets.GITHUB_TOKEN }}
